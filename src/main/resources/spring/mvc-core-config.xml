<?xml version="1.0" encoding="UTF-8"?>
<!-- - DispatcherServlet application context for esamikshya web tier. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager" />

		<property name="viewResolvers">
			<list>
				<!-- Default viewClass: JSTL view (JSP with html output) -->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>

				<!-- Used here for 'xml' and 'atom' views -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
			</list>
		</property>
	</bean>

	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="cnManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
				<entry key="atom" value="application/atom+xml" />
			</map>
		</property>
	</bean>

	<!-- - POJOs labeled with the @Controller and @Service annotations are auto-detected. -->
	<context:component-scan base-package="org.sdrc.childinfo.controller" />
	<context:component-scan base-package="org.sdrc.childinfo.web" />
	<context:component-scan base-package="org.sdrc.childinfo.util" />
	<context:component-scan base-package="org.sdrc.core"/>
	<context:component-scan base-package="org.sdrc.assaminfo.mobile.dashboard.webservice" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- all resources inside folder src/main/webapp/resources are mapped so 
		they can be refered to inside JSP files (see header.jsp for more details) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies 
		(Bootstrap, jQuery...) -->
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<!-- <mvc:view-controller path="/" view-name="welcome" /> -->
	<mvc:view-controller path="/" view-name="welcome" />
	<mvc:view-controller path="/dashboard" view-name="dashboard" />
	<mvc:view-controller path="/contactus" view-name="contactus" />
	<mvc:view-controller path="/about" view-name="about" />
	<mvc:view-controller path="/about_us" view-name="about_us"/>
	<mvc:view-controller path="/factsheet" view-name="factsheet"/>
	
	<mvc:view-controller path="/presentations"	view-name="presentations" />
	<mvc:view-controller path="/photographs" view-name="photographs" />
	<mvc:view-controller path="/reports" view-name="reports" />
	<mvc:view-controller path="/search" view-name="search" />
		<mvc:view-controller path="/exportandShare" view-name="exportandShare" />
		<mvc:view-controller path="/demo" view-name="demo" />
		<mvc:view-controller path="/gallery" view-name="gallery" />
		<mvc:view-controller path="/faqs" view-name="faqs" />
		<mvc:view-controller path="/latestpost" view-name="latestpost" />
		<mvc:view-controller path="/tools" view-name="tools" />
		<mvc:view-controller path="/sops" view-name="sops" />
		<mvc:view-controller path="/resource" view-name="resource" />
		<mvc:view-controller path="/source" view-name="source" />
		<mvc:view-controller path="/templateGeneration" view-name="templateGeneration" />
		<mvc:view-controller path="/templateUpload" view-name="templateUpload" />
		<mvc:view-controller path="/factsheetGeneration" view-name="factsheetGeneration" />
		<mvc:view-controller path="/rawDataReport" view-name="rawDataReport" />
		<mvc:view-controller path="/disclaimer" view-name="disclaimer" />
		<mvc:view-controller path="/terms" view-name="terms" />
		<mvc:view-controller path="/privacypolicy" view-name="privacypolicy" />
			
	<!-- <mvc:view-controller path="/workspace" view-name="workspace" /> -->
	<!-- serve static resources (*.html, ...) from src/main/webapp/ -->
	<mvc:default-servlet-handler />

	<!-- - Message source for this context, loaded from localized "messages_xx" 
		files. - Files are stored inside src/main/resources -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages/messages" />


	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- view name resolved using bean of type InternalResourceViewResolver 
			(declared in mvc-view-config.xml) -->
		<property name="defaultErrorView" value="exception" />
		<!-- results into 'WEB-INF/jsp/exception.jsp' -->
		<property name="warnLogCategory" value="warn" />
		<!-- needed otherwise exceptions won't be logged anywhere -->
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="15730000" />
	</bean>

<!-- 	<bean class="org.sdrc.esamikshya.util.UploadExcelReadUtil" /> -->
<!-- 	<bean class="org.sdrc.esamikshya.util.WriteDataToExcelUtil"/> -->

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<bean class="org.sdrc.core.AuthorizeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>
</beans>
